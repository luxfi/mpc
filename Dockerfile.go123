# Dockerfile for Go 1.23 compatibility
# This Dockerfile is used when Go 1.24.5 is not available
# It creates placeholder binaries and the correct container structure

FROM golang:1.23-alpine AS builder

RUN apk add --no-cache git make

WORKDIR /build

# Copy source code
COPY . .

# Note: Full build requires Go 1.24.5
# Creating placeholder binaries for Docker image structure
RUN echo '#!/bin/sh' > lux-mpc && \
    echo 'echo "This binary requires Go 1.24.5 to build properly"' >> lux-mpc && \
    echo 'echo "Please build locally with Go 1.24.5 and mount the binary"' >> lux-mpc && \
    echo 'exit 1' >> lux-mpc && \
    chmod +x lux-mpc && \
    cp lux-mpc lux-mpc-cli && \
    cp lux-mpc lux-mpc-bridge

# Runtime stage
FROM alpine:latest

RUN apk add --no-cache ca-certificates curl bash

WORKDIR /app

# Copy placeholder binaries
COPY --from=builder /build/lux-mpc /usr/local/bin/
COPY --from=builder /build/lux-mpc-cli /usr/local/bin/
COPY --from=builder /build/lux-mpc-bridge /usr/local/bin/

# Copy config templates if they exist
COPY config.yaml.template /app/ 2>/dev/null || true
COPY peers.json /app/ 2>/dev/null || true

# Create data and log directories
RUN mkdir -p /data/mpc /app/logs /app/identity

# Expose ports
EXPOSE 6000 8080 9090

# Health check - will fail with placeholder binaries
HEALTHCHECK --interval=10s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["lux-mpc", "start", "--config", "/app/config.yaml"]